{"version":3,"sources":["Header.js","Constants.js","Category.js","Word.js","Alphabets.js","GameEnd.js","GameBoard.js","Footer.js","App.js","index.js"],"names":["Header","id","AlphabetsList","CategoryList","Colors","Shapes","Movies","Superheroes","Countries","Naruto","Flowers","Disney","HarryPotter","Music","Fantasy","getEmoji","category","emoji","Category","e","val","currentTarget","textContent","this","props","clickHandle","categoryList","map","key","className","gameState","categoryComplete","includes","isCategoryClicked","onClick","handleClick","Constants","React","Component","Word","wordAlphabetsList","alphabet","index","style","matchedAlphabets","opacity","trim","borderBottom","Alphabets","alphabetValue","alphabetsList","alphabetList","clickedAlphabets","length","background","selectedCategory","gameStatus","pointerEvents","cursor","GameEnd","score","display","role","aria-label","margin","color","fontWeight","startGame","GameBoard","createLifeEmojis","lives","i","state","totalLives","push","categoryWords","randomWord","wordAlphabets","totalWordCount","categoryWordCount","completedCategory","randomNumber","finalScore","clue","selectCategory","bind","createWordPlaceholder","checkAlphabet","handleKeyDown","document","addEventListener","removeEventListener","toUpperCase","keyCode","setState","words","split","setTimeout","num","Math","floor","random","word","charAt","inputAlphabet","indexOf","parseInt","forEach","prevState","splice","textAlign","Footer","href","target","rel","App","ReactDOM","render","getElementById"],"mappings":"oVAWeA,MARf,WACE,OACE,oCACE,yBAAKC,GAAG,UAAR,a,mCCNOC,G,YAAgB,CAC3B,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGWC,EAAe,CAC1B,SACA,SACA,SACA,cACA,YACA,SACA,UACA,SACA,cACA,QACA,WAGWC,EAAS,CACpB,0CACA,kCACA,oCACA,+CACA,6BACA,yCACA,6BACA,8BACA,+BACA,kCACA,4CACA,wCACA,2BACA,6BACA,uCACA,oDACA,yBACA,iCACA,uCACA,wBACA,wDACA,+BACA,yCACA,uBACA,+BACA,6BACA,qBACA,gCACA,gCAGWC,EAAS,CACpB,yBACA,iBACA,kCACA,0BACA,wDACA,iCACA,2BACA,2BACA,+CACA,+CACA,uDACA,2CACA,kDACA,sCACA,sCACA,0CACA,mCACA,+BACA,8CACA,2CACA,iDACA,6BACA,2CACA,0BACA,kDACA,8BACA,6CACA,sBACA,8BAGWC,EAAS,CACpB,2BACA,wCACA,6CACA,+BACA,qDACA,uCACA,6CACA,mDACA,0DACA,kDACA,+DACA,2DACA,wCACA,oDACA,wDACA,+BACA,kEACA,8BACA,qCACA,iDACA,2BACA,4CACA,wCACA,gEACA,qFACA,oDACA,mDACA,qGACA,mEAGWC,EAAc,CACzB,uBACA,wCACA,yBACA,+DACA,+BACA,+DACA,qEACA,8DACA,wDACA,oFACA,iDACA,uFACA,qGACA,0BACA,kDACA,0GACA,yFACA,4EACA,iIACA,0GACA,4FACA,kCACA,4FACA,uHACA,sDACA,8FACA,2FACA,+DACA,+BAGWC,EAAY,CACvB,8BACA,+BACA,oHACA,8CACA,kCACA,uCACA,sCACA,mCACA,iCACA,kFACA,8DACA,yDACA,uIACA,gDACA,wCACA,wCACA,+EACA,8DACA,mCACA,uCACA,sCACA,uDACA,oCACA,oGACA,iDACA,yCACA,8CACA,gCACA,2CAGWC,EAAS,CACpB,iEACA,oEACA,6FACA,4DACA,2EACA,2DACA,kEACA,oCACA,iDACA,iFACA,2FACA,gDACA,6CACA,iCACA,+DACA,4CACA,sEACA,+DACA,2CACA,yEACA,iGACA,+CACA,4EACA,6CACA,gEACA,8CACA,yCACA,sEACA,sFAGWC,EAAU,CACrB,6CACA,wCACA,iCACA,6CACA,gFACA,sGACA,mCACA,4FACA,oDACA,+DACA,6FACA,4HACA,iDACA,4CACA,iCACA,oGACA,sFACA,8CACA,kJACA,0HACA,6DACA,sEACA,wFACA,mDACA,qFACA,iGACA,wCACA,kDACA,iDAGWC,EAAS,CACpB,mDACA,oDACA,2EACA,wDACA,4DACA,+FACA,wDACA,uEACA,kFACA,qEACA,0DACA,gDACA,0FACA,qGACA,4EACA,8DACA,yEACA,+CACA,6EACA,wDACA,8GACA,yDACA,uEACA,iFACA,+EACA,iDACA,2EACA,qEACA,uFAGWC,EAAc,CACzB,kEACA,qEACA,kGACA,kCACA,gDACA,wEACA,mEACA,mDACA,iDACA,2BACA,mDACA,oEACA,uEACA,gEACA,wDACA,yIACA,uIACA,2CACA,0CACA,6FACA,uCACA,sEACA,uDACA,iGACA,oFACA,8EACA,4FACA,0FACA,+CAGWC,EAAQ,CACnB,yGACA,8EACA,0DACA,8FACA,8BACA,mCACA,oDACA,qEACA,2FACA,iFACA,8EACA,+DACA,gEACA,oJACA,wFACA,qGACA,gKACA,6IACA,wDACA,6EACA,iLACA,gFACA,qIACA,4DACA,+GACA,8HACA,4EACA,6FACA,6EAGWC,EAAU,CACrB,qFACA,8HACA,uEACA,wJACA,mEACA,6CACA,4GACA,6HACA,6FACA,iDACA,yHACA,kDACA,yCACA,iEACA,8FACA,0FACA,8DACA,qJACA,4FACA,gDACA,gEACA,kFACA,gEACA,sFACA,2FACA,6CACA,+DACA,sEACA,2CAMWC,EAAW,SAACC,GACvB,IAAIC,EAAQ,GACZ,OAAQD,GACN,IAAK,SACHC,EAAQ,gBACR,MACF,IAAK,SACHA,EAAQ,g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","file":"static/js/main.56ab42d7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <div id=\"navbar\">HANGMAN</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;","export const AlphabetsList = [\r\n  \"A\",\r\n  \"B\",\r\n  \"C\",\r\n  \"D\",\r\n  \"E\",\r\n  \"F\",\r\n  \"G\",\r\n  \"H\",\r\n  \"I\",\r\n  \"J\",\r\n  \"K\",\r\n  \"L\",\r\n  \"M\",\r\n  \"N\",\r\n  \"O\",\r\n  \"P\",\r\n  \"Q\",\r\n  \"R\",\r\n  \"S\",\r\n  \"T\",\r\n  \"U\",\r\n  \"V\",\r\n  \"W\",\r\n  \"X\",\r\n  \"Y\",\r\n  \"Z\",\r\n];\r\n\r\nexport const CategoryList = [\r\n  \"Colors\",\r\n  \"Shapes\",\r\n  \"Movies\",\r\n  \"Superheroes\",\r\n  \"Countries\",\r\n  \"Naruto\",\r\n  \"Flowers\",\r\n  \"Disney\",\r\n  \"HarryPotter\",\r\n  \"Music\",\r\n  \"Fantasy\",\r\n];\r\n\r\nexport const Colors = [\r\n  \"fuchsia~Fancy name for a shade of pink.\",\r\n  \"salmon~Also the name of a fish.\",\r\n  \"firebrick~Brick used in furnaces.\",\r\n  \"coral~Great Barrier Reef is famous for this.\",\r\n  \"moccasin~Type of footwear.\",\r\n  \"lavender~Flower used for aromatherapy.\",\r\n  \"olive~Mediterranean fruit.\",\r\n  \"teal~Freshwater wild ducks.\",\r\n  \"peachpuff~Named after Peach.\",\r\n  \"cornsilk~Has corn in it's name.\",\r\n  \"turquoise~Bluish green phosphate mineral.\",\r\n  \"sienna~Yellowish brown Earth pigment.\",\r\n  \"cadetblue~Shade of cyan.\",\r\n  \"chocolate~Made from cocoa.\",\r\n  \"seashell~Found washed up on beaches.\",\r\n  \"honeydew~Named after a fruit of the melon family.\",\r\n  \"ivory~Elephant's tusk.\",\r\n  \"papayawhip~Named after papaya.\",\r\n  \"thistle~National flower of Scotland.\",\r\n  \"amber~Glistening gem.\",\r\n  \"rosybrown~Light shade of red with brown in it's name.\",\r\n  \"beige~Color of natural wool.\",\r\n  \"burlywood~Derives it's name from wood.\",\r\n  \"gold~Precious metal.\",\r\n  \"cyan~Member of CMYK quartet.\",\r\n  \"plum~Popular form of cake.\",\r\n  \"snow~Ice crystals.\",\r\n  \"wheat~Most widely used grain.\",\r\n  \"tomato~La Tomatina festival.\"\r\n];\r\n\r\nexport const Shapes = [\r\n  \"rhombus~Diamond shape.\",\r\n  \"cube~Rubik's ?\",\r\n  \"pentagon~Symbol of US military.\",\r\n  \"cone~Ice cream holders.\",\r\n  \"trapezoid~Trapezium in English outside North America.\",\r\n  \"oval~Cricket ground in London.\",\r\n  \"ellipse~Squashed circle.\",\r\n  \"square~Four equal sides.\",\r\n  \"triangle~Equilateral, isosceles and scalene.\",\r\n  \"parallelogram~Special type of quadrilateral.\",\r\n  \"cylinder~Flat circular ends and long straight sides.\",\r\n  \"hexagon~Benzene rings are of this shape.\",\r\n  \"rectangle~Quadrilateral with four right angles.\",\r\n  \"circle~Has a radius and a diameter.\",\r\n  \"triangular prism~Three sided prism.\",\r\n  \"octahedron~Polyhedron with eight faces.\",\r\n  \"heptagon~Also known as Septagon.\",\r\n  \"octagon~Eight sided polygon.\",\r\n  \"quadrilateral~Base of square and rectangle.\",\r\n  \"trapezium~Alternative name of trapezoid.\",\r\n  \"polygon~Base of hexagon, heptagon and octagon.\",\r\n  \"sphere~Shape of the Earth.\",\r\n  \"cuboid~Convex polyhedron with six faces.\",\r\n  \"pyramid~Found in Egypt.\",\r\n  \"ellipsoid~Obtained from sphere by deforming it.\",\r\n  \"nonagon~Nine sided polygon.\",\r\n  \"tetrahedron~Pyramid shape with four sides.\",\r\n  \"kite~Flying object.\",\r\n  \"decagon~Ten sided polygon.\"\r\n];\r\n\r\nexport const Movies = [\r\n  \"the vow~Wedding promise.\",\r\n  \"princess diaries~Princess of Genovia.\",\r\n  \"jumanji~World's most dangerous video game.\",\r\n  \"the notebook~Allie and Noah.\",\r\n  \"freaky friday~Mother and daughter switching souls.\",\r\n  \"frozen~True love can thaw a ? heart.\",\r\n  \"brave~Scottish tale of an archer princess.\",\r\n  \"tangled~Girl with the 70 foot long golden locks.\",\r\n  \"notting hill~British bookseller meets American actress.\",\r\n  \"love actually~Christmas themed romantic comedy.\",\r\n  \"amelie~Young French waitress caught in an imaginative world.\",\r\n  \"pretty woman~Romantic comedy with Julia Roberts as lead.\",\r\n  \"titanic~The ship that could not sink.\",\r\n  \"the proposal~Andrew and Margaret's trip to Sitka.\",\r\n  \"the terminal~Victor Navorski stranded at the airport.\",\r\n  \"sully~Miracle on the Hudson.\",\r\n  \"home alone~Eight year old Kevin saving his house from burglars.\",\r\n  \"blended~Blended familymoon.\",\r\n  \"despicable me~Gru and his Minions.\",\r\n  \"inception~Your mind is the scene of the crime.\",\r\n  \"ratatouille~Little Chef.\",\r\n  \"ghostbusters~Catching ghosts in New York.\",\r\n  \"up~On an adventure in a flying house.\",\r\n  \"finding neverland~Story of a man who doesn't want to grow up.\",\r\n  \"fantastic four~Astronauts gaining superpowers after being hit by cosmic radiation.\",\r\n  \"coco~Miguel's adventures in the Land of the Dead.\",\r\n  \"onward~Ian and Barley embark on a magical quest.\",\r\n  \"interstellar~A team of explorers travel through a wormhole in space to ensure humanity's survival.\",\r\n  \"gravity~Two astronauts marooned in space struggle for survival.\"\r\n];\r\n\r\nexport const Superheroes = [\r\n  \"thor~God of Thunder.\",\r\n  \"wonder woman~Amazonian warrior queen.\",\r\n  \"superman~Man of Steel.\",\r\n  \"rogue~A mutant, she absorbs the power of anyone she touches.\",\r\n  \"black panther~Wakandan king.\",\r\n  \"storm~Possesses psionic abilities to manipulate the weather.\",\r\n  \"hawkeye~Master marksman and a former special agent of S.H.I.E.L.D.\",\r\n  \"captain america~God's righteous man who leads the Avengers.\",\r\n  \"ironman~Genius. Billionaire. Playboy. Philanthropist.\",\r\n  \"black widow~Super spy who has become one of S.H.I.E.L.D.'s most deadly assassins.\",\r\n  \"starlord~Leader of the Guardians of the Galaxy\",\r\n  \"scarlet witch~Powerful mutant sorceress, has been a part of both Avengers and X-Men.\",\r\n  \"green lantern~Part of an alien interstellar police force who fights evil with the aid of his ring.\",\r\n  \"batman~The Dark Knight.\",\r\n  \"spiderman~The friendly neighbourhood superhero.\",\r\n  \"antman~Master thief and now a superhero who can shrink and expand with the help of his futuristic suit.\",\r\n  \"cyclops~The first of the X-Men who can unleash an uncontrollable blast of optic force.\",\r\n  \"flash~The fastest man alive who fights against evil with his super speed.\",\r\n  \"quicksilver~With the ability to run at the speed of sound, he is always racing to uncover his past and the road to the future.\",\r\n  \"captain marvel~Former pilot, who upon being exposed to energy of the Tesseract, obtained cosmic powers.\",\r\n  \"wolverine~A mutant with healing power, adamantium metal claws and a no-nonsense attitude.\",\r\n  \"aquaman~King of the Seven Seas.\",\r\n  \"human torch~An astronaut, who gained his powers on a spacecraft bombarded by cosmic rays.\",\r\n  \"invisible woman~Uses her power of invisibility and mental ability to manipulate ambient cosmic energy to save Earth.\",\r\n  \"hulk~Bruce Banner's alter ego, who is always angry.\",\r\n  \"falcon~A former US Air Force pararescue airman, he teams up with Cap to foil HYDRA's plans.\",\r\n  \"the thing~Orange colored, thick skinned, heavily muscled, and superhumanly strong thing.\",\r\n  \"hawkgirl~An immortal warrior and part of the Justice League.\",\r\n  \"deadpool~Merc with a Mouth.\"\r\n];\r\n\r\nexport const Countries = [\r\n  \"spain~La Tomatina festival.\",\r\n  \"india~Home of the Taj Mahal.\",\r\n  \"morocco~Mountainous country of western North Africa that lies directly across the Strait of Gibraltar from Spain.\",\r\n  \"france~Cannes film festival is hosted here.\",\r\n  \"netherlands~The Oranje country.\",\r\n  \"russia~Largest country in the world.\",\r\n  \"ireland~The Emerald Isle of Europe.\",\r\n  \"germany~Oktoberfest destination.\",\r\n  \"italy~Home of pizza and pasta.\",\r\n  \"austria~Lies in East Central Europe and is surrounded by 8 different countries.\",\r\n  \"czech republic~Has the highest castle density in the world.\",\r\n  \"ghana~The Garden City of West Africa is situated here.\",\r\n  \"maldives~Island nation in the Indian ocean, known for its natural environment including the blue ocean, white beaches and clean air.\",\r\n  \"croatia~The great Nikola Tesla was born here.\",\r\n  \"malaysia~Home to the Petronas Towers.\",\r\n  \"fiji~Soft Coral Capital of the World.\",\r\n  \"denmark~Home to LEGO and handball and birthplace of Hans Christian Andersen.\",\r\n  \"jamaica~Caribbean nation known for its sports achievements.\",\r\n  \"norway~Land of the midnight sun.\",\r\n  \"canada~Has a maple leaf on its flag.\",\r\n  \"sweden~Home to IKEA, Volvo and H&M.\",\r\n  \"mexico~Famous for its Mayan temples and its cuisine.\",\r\n  \"chile~Home to the Atacama desert.\",\r\n  \"brazil~The national football team of this country has won the FIFA World Cup a record five times.\",\r\n  \"iceland~Land of the volcanoes and hot springs.\",\r\n  \"new zealand~All Blacks and All Whites.\",\r\n  \"argentina~FC Barcelona's GOAT resides here.\",\r\n  \"japan~Land of the Rising Sun.\",\r\n  \"portugal~Part of the Iberian peninsula.\"\r\n];\r\n\r\nexport const Naruto = [\r\n  \"naruto uzumaki~The unpredictable number one hyperactive ninja.\",\r\n  \"rasenshuriken~Shuriken shaped variant of Wind Release : Rasengan.\",\r\n  \"susanoo~Gigantic humanoid avatar belonging to those who have awakened Mangekyou Sharingan.\",\r\n  \"kotoamatsukami~The greatest genjutsu belonging to Shisui.\",\r\n  \"sasuke uchiha~The last of his family who later became the Shadow Hokage.\",\r\n  \"mangekyou sharingan~The visual prowess of Itachi Uchiha.\",\r\n  \"madara uchiha~Indra's reincarnation and first Uchiha clan head.\",\r\n  \"chidori~Kakashi's original jutsu.\",\r\n  \"konohagakure~The Village Hidden in the Leaves.\",\r\n  \"kakashi hatake~A natural prodigy and one of Leaf's greatest, the Sixth Hokage.\",\r\n  \"genjutsu~Sensory illusions jutsu and among the main three besides Ninjutsu and Taijutsu.\",\r\n  \"jiraiya~The Toad Sage and one of the Sannins.\",\r\n  \"itachi uchiha~The unsung hero of the Leaf.\",\r\n  \"orochimaru~The twisted Sannin.\",\r\n  \"hashirama senju~Asura's recincarnation and the First Hokage.\",\r\n  \"hokage~Leader of the Hidden Leaf village.\",\r\n  \"shikamaru nara~Lazy but possesses the greatest intellect in Konoha.\",\r\n  \"jinchuriki~Humans who have tailed beasts sealed within them.\",\r\n  \"zabuza momochi~Demon of the Hidden Mist.\",\r\n  \"yellow flash~The legendary Fourth Hokage and the fastest Shinobi ever.\",\r\n  \"sakura haruno~Tsunade's apprentice and only the second person to acquire The Hundred Healings.\",\r\n  \"hinata hyuga~Creator of the Twin Lion Fists.\",\r\n  \"deidara~Rogue ninja, who was memeber of the Explosion Corps of Iwagakure.\",\r\n  \"akatsuki~Group of S-ranked missing ninjas.\",\r\n  \"asakujaku~Gai's Sixth Gate of Joy allows him to perform this.\",\r\n  \"kazekage~Leader of the Hidden Sand village.\",\r\n  \"gamabunta~Chief toad of Mount Myoboku.\",\r\n  \"flying raijin~The jutsu created by Tobirama and mastered by Minato.\",\r\n  \"kekkei genkai~Anomaly of the DNA that allows the wielder to use unique techniques.\"\r\n];\r\n\r\nexport const Flowers = [\r\n  \"orchid~Bright rich purple colored flowers.\",\r\n  \"lily~Also the name of Harry's mother.\",\r\n  \"rose~Proposal flowers, mostly.\",\r\n  \"lotus~Sacred and national flower of India.\",\r\n  \"jasmine~An important scent noted in perfumes, and also has herbal properties.\",\r\n  \"daffodil~Along with tulips, this yellow colored flower is one of the most popular springtime bulbs.\",\r\n  \"daisy~Girlfriend of Donald Duck.\",\r\n  \"hibiscus~Native to warm temperate, subtropical and tropical regions throughout the world.\",\r\n  \"gerbera~Also commonly known as the African daisy.\",\r\n  \"sunflower~Bright yellow colored flowers named after the Sun.\",\r\n  \"tulip~Large, showy and brightly colored, they are the most colorful of all spring flowers.\",\r\n  \"peony~Large, showy and often fragrant, occuring in a glorious spectrum of colors including purple, red, white and yellow.\",\r\n  \"dahlia~Declared the national flower of Mexico.\",\r\n  \"marigold~Also called the herb of the sun.\",\r\n  \"petunia~Harry's maternal aunt.\",\r\n  \"lavender~Fragrance from the oils of this plant is believed to help promote calmness and wellness.\",\r\n  \"periwinkle~A unique plant, which blends ornamental values and medicinal properties.\",\r\n  \"cherry blossom~Found in abundance in Japan.\",\r\n  \"bluebell~These blue colored sweet-smelling flowers nod or droop to one side of the flowering stem and have creamy white-coloured pollen inside.\",\r\n  \"dandelion~Bright yellow flowers whose oil is often used in recipes designed to soothe and heal chapped or cracked skin.\",\r\n  \"chrysanthemum~One of the most popular fall garden flowers.\",\r\n  \"hyacinth~Highly fragrant, bell-shaped flowers with reflexed petals.\",\r\n  \"snowdrop~White drooping bell shaped flower with six petal-like tepals in two circles.\",\r\n  \"iris~Named for the Greek goddess of the rainbow.\",\r\n  \"geranium~Bright flowers that grow in the eastern part of the Mediterranean region.\",\r\n  \"honeysuckle~Derives its name from the edible sweet nectar obtainable from its tubular flowers.\",\r\n  \"hazel~There's a nut named after this.\",\r\n  \"mistletoe~Widely used as a Christmas tradition.\",\r\n  \"nightshade~Grow in shade and flower at night.\"\r\n];\r\n\r\nexport const Disney = [\r\n  \"eugene~Also known for his smouldering intensity.\",\r\n  \"rapunzel~The long lost princess caged in a tower.\",\r\n  \"nemo~The little clownfish who gets abducted from the Great Barrier Reef.\",\r\n  \"aladdin~A wily but kind thief in the city of Agrabah.\",\r\n  \"jasmine~Sultan's daughter and fiesty princess of Agrabah.\",\r\n  \"ariel~Youngest daughter of King Triton and Queen Athena of an underwater kingdom, Atlantica.\",\r\n  \"elsa~The Snow Queen, heir to the throne of Arendelle.\",\r\n  \"dory~The forgetful blue tang fish who helped Marlin in finding Nemo.\",\r\n  \"simba~Son of Mufasa and Sarabi, who grows up to become King of the Pride Lands.\",\r\n  \"aurora~She who fell into a deep slumber only to be awakened later.\",\r\n  \"olaf~The little snowman who is known for his warm hugs.\",\r\n  \"anna~Princess of Arendelle and Elsa's sister.\",\r\n  \"belle~A proud bibliophile, she becomes prisoner to the Beast to save her father's life.\",\r\n  \"astrid~Free spirited and playful, she is a Viking warrior of Clan Hofferson of the Hooligan tribe.\",\r\n  \"hiccup~Current chief of the Hooligan tribe of the Viking kingdom of Berk.\",\r\n  \"merida~Archer princess of the Scottish kingdom of DunBroch.\",\r\n  \"dumbo~A baby elephant who can fly with the help of his oversized ears.\",\r\n  \"linguini~Son of Gusteau, who befriends Remy.\",\r\n  \"maui~The boisterous demigod often found with his giant, magical fish hook.\",\r\n  \"toothless~Hiccup Horrendous Haddock III's Night Fury.\",\r\n  \"eva~A robot probe easily identifiable by her characteristic glossy white egg-shaped body and blue LED eyes.\",\r\n  \"mowgli~The man-cub from Sionese who united the jungle.\",\r\n  \"woody~The Sheriff who alongside Buzz forms a formidable partnership.\",\r\n  \"alice~Follows a rabbit in a blue coat to a magical wonderland from her dreams.\",\r\n  \"moana~Embarks on a journey to return the heart of goddess Te Fiti from Maui.\",\r\n  \"kristoff~Ice harvester, often found with Sven.\",\r\n  \"mater~The lovable, rustiest and trustiest tow truck in Radiator Springs.\",\r\n  \"buzz lightyear~Toy Space Ranger superhero and Woody's best friend.\",\r\n  \"miguel~The 12 year old boy who is accidentally transported to the Land of the Dead.\"\r\n];\r\n\r\nexport const HarryPotter = [\r\n  \"leaky cauldron~Popular wizarding pub and inn located in London.\",\r\n  \"quidditch~Played by witches and wizards riding flying broomsticks.\",\r\n  \"marauders map~Magical document that revealed all of Hogwarts School of Witchcraft and Wizardry.\",\r\n  \"harry potter~The boy who lived.\",\r\n  \"transfiguration~Taught by Minerva McGonagall.\",\r\n  \"boggart~A shapeshifter that took the form of the victim's worst fear.\",\r\n  \"remembrall~Neville received this as a gift from his grandmother.\",\r\n  \"hermione granger~The brightest witch of her age.\",\r\n  \"herbology~Study of magical and mundane plants.\",\r\n  \"muggle~Non magic person.\",\r\n  \"galleon~Most valuable of the wizarding currency.\",\r\n  \"alohomora~A charm that unlocks objects such as doors and windows.\",\r\n  \"animagus~A witch or wizard who can transform at will into an animal.\",\r\n  \"ron weasley~The guy who is always there when Harry needs him.\",\r\n  \"riddikulus~A charm used in defence against a Boggart.\",\r\n  \"yule ball~Formal Christmas celebration, which was held for students of Wizarding schools who participated in the Triwizard Tournament.\",\r\n  \"apparition~A magical form of teleportation, through which a witch or wizard can disappear from one location and reappear in another.\",\r\n  \"albus dumbledore~Headmaster at Hogwarts.\",\r\n  \"the burrow~Family home of the Weasleys.\",\r\n  \"diagon alley~Cobblestoned wizarding alley and shopping area located behind Leaky Cauldron.\",\r\n  \"severus snape~The Half-Blood Prince.\",\r\n  \"divination~A form of magic which attempts to foresee future events.\",\r\n  \"expecto patronum~A spell used to ward off Dementors.\",\r\n  \"floo network~Mode of wizarding transportation by means of a particular powder and a fireplace.\",\r\n  \"gillyweed~A magical plant that, when eaten, allows a human to breathe underwater.\",\r\n  \"gryffindor~Hogwarts house which roughly corresponds to the element of fire.\",\r\n  \"ravenclaw~This Hogwarts house prizes learning, wisdom, wit, and intellect in its members.\",\r\n  \"incendio~A charm that conjured a jet of flames that could be used to set things alight.\",\r\n  \"pensieve~A magical repository for memories.\"\r\n];\r\n\r\nexport const Music = [\r\n  \"acoustic~Music that primarily uses instruments that produce sound without electric or electonic means.\",\r\n  \"ballad~A song that tells a story, and it can be dramtic, funny or romantic.\",\r\n  \"chord~Two or more harmonic notes played simultaneously.\",\r\n  \"chorus~A repeated section that contains the primary musical and lyrical motifs of the song.\",\r\n  \"edm~Electronic dance music.\",\r\n  \"grunge~Hybrid of punk and metal.\",\r\n  \"heavy metal~Loud, aggressive style of rock music.\",\r\n  \"jazz~A form of music whose chief characteristic was improvisation.\",\r\n  \"mixtape~A compilation of music, typically from multiple sources, recorded onto a medium.\",\r\n  \"punk rock~Often described as harder, louder, and cruder than other rock music.\",\r\n  \"reggae~Music genre that originated in Jamaica and epitomised by Bob Marley.\",\r\n  \"remix~A subset of audio mixing in music and song recordings.\",\r\n  \"rhythm~The pattern of sound, silence, and emphasis in a song.\",\r\n  \"tambourine~A musical instrument in the percussion family consisting of a wooden or plastic frame with pairs of small metal jingles, called zills.\",\r\n  \"turntable~A circular rotating platform of a phonograph, for playing sound recordings.\",\r\n  \"verse~A repeated section of a song that typically features a new set of lyrics on each repetition.\",\r\n  \"yodel~A form of singing which involves repeated and rapid changes of pitch between the low-pitch chest register and the high-pitch head register or falsetto.\",\r\n  \"saxophone~A family of single-reed wind instruments ranging from soprano to bass and characterized by a conical metal tube and finger keys.\",\r\n  \"cello~A bowed string instrument of the violin family.\",\r\n  \"synthesizer~An electronic musical instrument that generates audio signals.\",\r\n  \"composition~An original piece or work of music, either vocal or instrumental, the structure of a musical piece, or to the process of creating or writing a new piece of music.\",\r\n  \"pitch~The quality that makes it possible to judge sounds as higher and lower.\",\r\n  \"opera~A theatrical work consisting of a dramatic text, that has been set to music and staged with scenery, costumes, and movement.\",\r\n  \"concert~A live music performance in front of an audience.\",\r\n  \"symphony~A lengthy form of musical composition for orchestra, normally consisting of several large sections.\",\r\n  \"harmonica~Also known as a French harp or mouth organ, is a free reed wind instrument used worldwide in many musical genres.\",\r\n  \"trumpet~A brass instrument commonly used in classical and jazz ensembles.\",\r\n  \"violin~The smallest and highest pitched string instrument typically used in western music.\",\r\n  \"tempo~Defined as the pace or speed at which a section of music is played.\"\r\n];\r\n\r\nexport const Fantasy = [\r\n  \"unicorn~Mythological animal resembling a horse with a single horn on its forehead.\",\r\n  \"lochness~In Scottish folklore, often described as large, long-necked, and with one or more humps protruding from the water.\",\r\n  \"apprentice~A person who works for another in order to learn a trade.\",\r\n  \"alchemy~Defined as the process of taking something ordinary and turning it into something extraordinary, sometimes in a way that cannot be explained.\",\r\n  \"chalice~A footed cup intended to hold a drink during a ceremony.\",\r\n  \"conjure~To make something appear by magic.\",\r\n  \"gnome~An ageless and often deformed dwarf of folklore who lives in the earth and usually guards treasure.\",\r\n  \"pixie~Mythical creature of British folklore portrayed as small and humanlike in form, with pointed ears and a pointed hat.\",\r\n  \"soothsayer~A person who predicts the future by magical, intuitive, or more rational means.\",\r\n  \"dungeon~A dark underground prison in a castle.\",\r\n  \"leprechaun~In Irish folklore, usually depicted as little bearded men, wearing a coat and hat, who partake in mischief.\",\r\n  \"bewitch~Control someone's behaviour with magic.\",\r\n  \"realm~An area of interest or activity.\",\r\n  \"satyr~A god in Greek literature who is half man and half goat.\",\r\n  \"golem~A figure artificially constructed in the form of a human being and endowed with life.\",\r\n  \"griffin~A mythical creature with the head and wings of an eagle and the body of a lion.\",\r\n  \"nymph~A nature spirit in the guise of an attractive maiden.\",\r\n  \"dragon~A mythical monster generally represented as a huge, winged reptile with crested head and enormous claws and teeth, and often spouting fire.\",\r\n  \"crystal ball~A sphere especially of quartz crystal traditionally used by fortune-tellers.\",\r\n  \"enchantment~The state of being under a spell.\",\r\n  \"hobbit~An imaginary race of half-size people living in holes.\",\r\n  \"divination~The art or practice that seeks to foresee or foretell future events.\",\r\n  \"portal~Large and imposing gateway or entry to something else.\",\r\n  \"phoenix~A mythological bird that cyclically regenerates or is otherwise born again.\",\r\n  \"hippogriff~A legendary animal having the foreparts of a griffin and the body of a horse.\",\r\n  \"yeti~Also known as the Abominable Snowman.\",\r\n  \"werewolf~A human with the ability to shapeshift into a wolf.\",\r\n  \"centaur~A race of creatures fabled to be half human and half horse.\",\r\n  \"pegasus~A mythical winged divine horse.\"\r\n];\r\n\r\nexport const TotalWords = 319;\r\nexport const TotalLives = 7;\r\n\r\nexport const getEmoji = (category) => {\r\n  let emoji = \"\";\r\n  switch (category) {\r\n    case \"Colors\":\r\n      emoji = \" 🎨\";\r\n      break;\r\n    case \"Shapes\":\r\n      emoji = \" ⬜️\";\r\n      break;\r\n    case \"Movies\":\r\n      emoji = \" 🎥\";\r\n      break;\r\n    case \"Superheroes\":\r\n      emoji = \" 🦸\";\r\n      break;\r\n    case \"Countries\":\r\n      emoji = \" 🏳️\";\r\n      break;\r\n    case \"Naruto\":\r\n      emoji = \" 🌀\";\r\n      break;\r\n    case \"Flowers\":\r\n      emoji = \" 🌼\";\r\n      break;\r\n    case \"Disney\":\r\n      emoji = \" 🧜‍♀️\";\r\n      break;\r\n    case \"HarryPotter\":\r\n      emoji = \" 🧙\";\r\n      break;\r\n    case \"Music\":\r\n      emoji = \" 🎸\";\r\n      break;\r\n    case \"Fantasy\":\r\n      emoji = \" 🦄\";\r\n      break;\r\n    default:\r\n      emoji = [];\r\n  }\r\n  return emoji;\r\n};","import React from \"react\";\r\nimport \"./Category.css\";\r\n\r\nimport * as Constants from \"./Constants\";\r\n\r\nclass Category extends React.Component {\r\n  handleClick(e) {\r\n    let val = e.currentTarget.textContent;\r\n    this.props.clickHandle(val);\r\n  }\r\n\r\n  render() {\r\n    let categoryList = this.props.categoryList;\r\n    return (\r\n      <>\r\n        {categoryList.map((category) => {\r\n          return (\r\n            <div\r\n              key={\"category_\" + category}\r\n              id={\"category_\" + category}\r\n              className={`category ${\r\n                this.props.gameState === \"initial\" ||\r\n                this.props.gameState === \"end\"\r\n                  ? null\r\n                  : this.props.categoryComplete.includes(category)\r\n                  ? \"completed-category\"\r\n                  : this.props.isCategoryClicked === category\r\n                  ? \"selected-category\"\r\n                  : null\r\n              }`}\r\n              onClick={(e) => {\r\n                this.handleClick(e);\r\n              }}\r\n            >\r\n              <label className=\"single-category\">\r\n                {category + Constants.getEmoji(category)}\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;","import React from \"react\";\r\nimport \"./Word.css\";\r\n\r\nclass Word extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.wordAlphabetsList.map((alphabet, index) => {\r\n          return (\r\n            <div\r\n              key={\"wordAlphabet_\" + index}\r\n              id={\"wordAlphabet_\" + index}\r\n              className=\"word-alphabet\"\r\n            >\r\n              <label\r\n                className=\"placeholder-label\"\r\n                style={\r\n                  this.props.matchedAlphabets.includes(alphabet)\r\n                    ? { opacity: 1 }\r\n                    : { opacity: 0 }\r\n                }\r\n              >\r\n                {alphabet}\r\n              </label>\r\n              <span\r\n                className=\"placeholder-span\"\r\n                style={alphabet.trim() === \"\" ? { borderBottom: \"none\" } : null}\r\n              ></span>\r\n            </div>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Word;","import React from \"react\";\r\nimport \"./Alphabets.css\";\r\n\r\nclass Alphabets extends React.Component {\r\n  handleClick(e) {\r\n    let alphabetValue = e.currentTarget.textContent;\r\n    this.props.clickHandle(alphabetValue);\r\n  }\r\n\r\n  render() {\r\n    let alphabetsList = this.props.alphabetList;\r\n    return (\r\n      <div id=\"alphabet-container\">\r\n        {alphabetsList.map((alphabet) => {\r\n          return (\r\n            <div\r\n              key={\"alphabet_\" + alphabet}\r\n              id={\"alphabet_\" + alphabet}\r\n              className=\"alphabet\"\r\n              style={\r\n                this.props.clickedAlphabets.length === 0\r\n                  ? null\r\n                  : !this.props.clickedAlphabets.includes(alphabet)\r\n                  ? null\r\n                  : this.props.matchedAlphabets.includes(alphabet)\r\n                  ? { background: \"#baddb1\" }\r\n                  : { background: \"#e8afbb\" }\r\n              }\r\n            >\r\n              <label\r\n                className={`single-alphabet ${\r\n                  this.props.clickedAlphabets.includes(alphabet)\r\n                    ? \"shifter\"\r\n                    : \"\"\r\n                }`}\r\n                style={\r\n                  this.props.selectedCategory === \"\"\r\n                    ? { pointerEvents: \"none\" }\r\n                    : this.props.clickedAlphabets.includes(alphabet) ||\r\n                      this.props.gameStatus === \"initial\"\r\n                    ? { pointerEvents: \"none\" }\r\n                    : { cursor: \"pointer\" }\r\n                }\r\n                onClick={(e) => {\r\n                  this.handleClick(e);\r\n                }}\r\n              >\r\n                {alphabet}\r\n              </label>\r\n              <span className=\"alphabet-span-background\"></span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Alphabets;","import React from \"react\";\r\nimport \"./GameEnd.css\";\r\n\r\nclass GameEnd extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"game-end-container\">\r\n          <div\r\n            style={\r\n              this.props.score === 11\r\n                ? { display: \"block\" }\r\n                : { display: \"none\" }\r\n            }\r\n          >\r\n            <p>\r\n              Wow, we have run out of words to describe you as well as for the\r\n              quiz, literally. You have aced this with flying colors. You are\r\n              truy a champion and deserve this.\r\n              <span role=\"img\" aria-label=\"medal-emoji\">\r\n                {\" \"}\r\n                🥇{\" \"}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={\r\n              this.props.score !== 11\r\n                ? { display: \"block\" }\r\n                : { display: \"none\" }\r\n            }\r\n          >\r\n            <p style={{ margin: \"18px\", color: \"#644566\", fontWeight: \"bold\" }}>\r\n              Sorry, but you have used up all your lives. However if you want to\r\n              continue challenging yourself, get started again.\r\n            </p>\r\n            <button className=\"btn\" onClick={this.props.startGame}>\r\n              Play Again\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameEnd;\r\n","import React from \"react\";\r\nimport \"./GameBoard.css\";\r\n\r\nimport Category from \"./Category.js\";\r\nimport Word from \"./Word\";\r\nimport Alphabets from \"./Alphabets\";\r\nimport GameEnd from \"./GameEnd\";\r\n\r\nimport * as Constants from \"./Constants\";\r\n\r\nclass GameBoard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      alphabetList: Constants.AlphabetsList,\r\n      categoryList: Constants.CategoryList,\r\n      selectedCategory: \"\",\r\n      categoryWords: \"\",\r\n      randomWord: \"\",\r\n      clickedAlphabets: [],\r\n      matchedAlphabets: [],\r\n      wordAlphabets: [],\r\n      gameState: \"initial\",\r\n      score: 0,\r\n      totalWordCount: Constants.TotalWords,\r\n      categoryWordCount: 0,\r\n      totalLives: Constants.TotalLives,\r\n      isCategoryClicked: \"\",\r\n      categoryComplete: [],\r\n    };\r\n\r\n    this.completedCategory = [];\r\n    this.randomNumber = 0;\r\n    this.finalScore = 0;\r\n    this.clue = \"\";\r\n\r\n    this.selectCategory = this.selectCategory.bind(this);\r\n    this.randomWord = this.randomWord.bind(this);\r\n    this.createWordPlaceholder = this.createWordPlaceholder.bind(this);\r\n    this.checkAlphabet = this.checkAlphabet.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.startGame = this.startGame.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown(e) {\r\n    if (this.state.randomWord !== \"\") {\r\n      this.checkAlphabet(e.key.toUpperCase() + \"~\" + e.keyCode);\r\n    } else {\r\n    }\r\n  }\r\n\r\n  startGame() {\r\n    this.completedCategory = [];\r\n    this.setState({\r\n      alphabetList: Constants.AlphabetsList,\r\n      categoryList: Constants.CategoryList,\r\n      selectedCategory: \"\",\r\n      categoryWords: \"\",\r\n      randomWord: \"\",\r\n      clickedAlphabets: [],\r\n      matchedAlphabets: [],\r\n      wordAlphabets: [],\r\n      gameState: \"initial\",\r\n      score: 0,\r\n      totalWordCount: Constants.TotalWords,\r\n      categoryWordCount: 0,\r\n      totalLives: Constants.TotalLives,\r\n      isCategoryClicked: \"\",\r\n      categoryComplete: [],\r\n    });\r\n  }\r\n\r\n  selectCategory(category) {\r\n    let words = [];\r\n    switch (category.split(\" \")[0]) {\r\n      case \"Colors\":\r\n        words = Constants.Colors;\r\n        break;\r\n      case \"Shapes\":\r\n        words = Constants.Shapes;\r\n        break;\r\n      case \"Movies\":\r\n        words = Constants.Movies;\r\n        break;\r\n      case \"Superheroes\":\r\n        words = Constants.Superheroes;\r\n        break;\r\n      case \"Countries\":\r\n        words = Constants.Countries;\r\n        break;\r\n      case \"Naruto\":\r\n        words = Constants.Naruto;\r\n        break;\r\n      case \"Flowers\":\r\n        words = Constants.Flowers;\r\n        break;\r\n      case \"Disney\":\r\n        words = Constants.Disney;\r\n        break;\r\n      case \"HarryPotter\":\r\n        words = Constants.HarryPotter;\r\n        break;\r\n      case \"Music\":\r\n        words = Constants.Music;\r\n        break;\r\n      case \"Fantasy\":\r\n        words = Constants.Fantasy;\r\n        break;\r\n      default:\r\n        words = [];\r\n    }\r\n\r\n    this.setState({\r\n      selectedCategory: category.split(\" \")[0],\r\n      categoryWords: words,\r\n      gameState: \"running\",\r\n      categoryWordCount: words.length,\r\n      totalLives: Constants.TotalLives,\r\n      isCategoryClicked: category.split(\" \")[0],\r\n      clickedAlphabets: [],\r\n      matchedAlphabets: [],\r\n      wordAlphabets: [],\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.randomWord();\r\n    }, 100);\r\n  }\r\n\r\n  randomWord() {\r\n    let num = Math.floor(Math.random() * this.state.categoryWords.length);\r\n    let word = this.state.categoryWords[num];\r\n\r\n    let randomWord = word.split(\"~\")[0];\r\n    this.clue = word.split(\"~\")[1];\r\n    this.randomNumber = num;\r\n\r\n    this.setState({\r\n      randomWord: randomWord,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.createWordPlaceholder();\r\n    }, 100);\r\n  }\r\n\r\n  createWordPlaceholder() {\r\n    var word = this.state.randomWord.toUpperCase();\r\n    for (var i = 0; i < word.length; i++) {\r\n      this.state.wordAlphabets.push(word.charAt(i));\r\n    }\r\n    this.setState({\r\n      wordAlphabets: this.state.wordAlphabets,\r\n    });\r\n  }\r\n\r\n  checkAlphabet(inputAlphabet) {\r\n    let clickedAlphabets = this.state.clickedAlphabets;\r\n    let keyCode = 0;\r\n    if (this.state.wordAlphabets.includes(\" \")) {\r\n      if (clickedAlphabets.indexOf(\" \") === -1) {\r\n        clickedAlphabets.push(\" \");\r\n        this.state.matchedAlphabets.push(\" \");\r\n      }\r\n    }\r\n    if (inputAlphabet.indexOf(\"~\") !== -1) {\r\n      keyCode = parseInt(inputAlphabet.split(\"~\")[1]);\r\n      inputAlphabet = inputAlphabet.split(\"~\")[0];\r\n    }\r\n    if (\r\n      !clickedAlphabets.includes(inputAlphabet) &&\r\n      (keyCode !== 0\r\n        ? (keyCode >= 65 && keyCode <= 90) || (keyCode >= 97 && keyCode <= 122)\r\n        : true)\r\n    ) {\r\n      clickedAlphabets.push(inputAlphabet);\r\n\r\n      this.setState({\r\n        clickedAlphabets: this.state.clickedAlphabets,\r\n      });\r\n      this.state.wordAlphabets.forEach((alphabet) => {\r\n        if (alphabet === inputAlphabet) {\r\n          this.state.matchedAlphabets.push(inputAlphabet);\r\n          this.setState({\r\n            matchedAlphabets: this.state.matchedAlphabets,\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    if (\r\n      !this.state.wordAlphabets.includes(inputAlphabet) &&\r\n      (keyCode !== 0\r\n        ? (keyCode >= 65 && keyCode <= 90) || (keyCode >= 97 && keyCode <= 122)\r\n        : true)\r\n    ) {\r\n      this.setState((prevState) => {\r\n        return {\r\n          score: prevState.score,\r\n          totalLives:\r\n            prevState.totalLives === 0\r\n              ? prevState.totalLives\r\n              : prevState.totalLives - 1,\r\n        };\r\n      });\r\n      if (this.state.totalLives === 0) {\r\n        this.setState({\r\n          gameState: \"end\",\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.state.wordAlphabets.length === this.state.matchedAlphabets.length\r\n    ) {\r\n      this.state.categoryWords.splice(this.randomNumber, 1);\r\n      this.setState((prevState) => {\r\n        return {\r\n          score: prevState.score + 1,\r\n          totalLives: Constants.TotalLives,\r\n          totalWordCount: prevState.totalWordCount - 1,\r\n          clickedAlphabets: [],\r\n          matchedAlphabets: [],\r\n          wordAlphabets: [],\r\n          categoryWordCount: prevState.categoryWordCount - 1,\r\n          categoryWords: prevState.categoryWords,\r\n        };\r\n      });\r\n      if (this.state.categoryWords.length === 0) {\r\n        this.completedCategory.push(this.state.selectedCategory);\r\n        this.setState({\r\n          categoryComplete: this.completedCategory,\r\n          clickedAlphabets: [],\r\n          matchedAlphabets: [],\r\n          wordAlphabets: [],\r\n          selectedCategory: \"\",\r\n          categoryWords: \"\",\r\n          randomWord: \"\",\r\n          categoryWordCount: 0,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          clickedAlphabets: [],\r\n          matchedAlphabets: [],\r\n          wordAlphabets: [],\r\n          randomWord: \"\",\r\n        });\r\n        setTimeout(() => {\r\n          this.randomWord();\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n    if (this.state.totalWordCount === 0) {\r\n      this.finalScore = this.state.score;\r\n      this.setState({\r\n        gameState: \"end\",\r\n        selectedCategory: \"\",\r\n        categoryWords: \"\",\r\n        randomWord: \"\",\r\n        clickedAlphabets: [],\r\n        matchedAlphabets: [],\r\n        wordAlphabets: [],\r\n        score: 0,\r\n        totalWordCount: Constants.TotalWords,\r\n        categoryWordCount: 0,\r\n        totalLives: Constants.TotalLives,\r\n        isCategoryClicked: \"\",\r\n        categoryComplete: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  createLifeEmojis = () => {\r\n    let lives = [];\r\n    for (let i = 1; i <= this.state.totalLives; i++) {\r\n      lives.push(\r\n        <span\r\n          key={\"life_\" + i}\r\n          id={\"life_\" + i}\r\n          role=\"img\"\r\n          aria-label=\"gem-emoji\"\r\n        >\r\n          💎\r\n        </span>\r\n      );\r\n    }\r\n    return lives;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          style={\r\n            (this.state.gameState === \"running\" ||\r\n              this.state.gameState !== \"\") &&\r\n            this.state.gameState !== \"end\"\r\n              ? { display: \"block\" }\r\n              : this.state.gameState === \"end\"\r\n              ? { display: \"block\", opacity: 0.3 }\r\n              : { display: \"none\" }\r\n          }\r\n        >\r\n          <div id=\"category-header-container\">\r\n            <h3\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"#644566\",\r\n                background:\r\n                  \"linear-gradient(to bottom, white 0, white 60%, #fedc2a 60%, #fedc2a 80%, white 60%, white 100%)\",\r\n                margin: \"0 5px\",\r\n              }}\r\n            >\r\n              Categories\r\n            </h3>\r\n            <span role=\"img\" aria-label=\"pen-emoji\">\r\n              📋\r\n            </span>\r\n          </div>\r\n          <div id=\"category-container\">\r\n            <Category\r\n              categoryList={this.state.categoryList}\r\n              categoryComplete={this.completedCategory}\r\n              isCategoryClicked={this.state.isCategoryClicked}\r\n              gameState={this.state.gameState}\r\n              clickHandle={this.selectCategory}\r\n            />\r\n          </div>\r\n          <p style={{ textAlign: \"center\", margin: \"2px\" }}>\r\n            {this.state.gameState !== \"\" && this.state.selectedCategory !== \"\"\r\n              ? `Selected category is ${\r\n                  this.state.selectedCategory +\r\n                  Constants.getEmoji(this.state.selectedCategory)\r\n                }`\r\n              : `Please select a category to proceed.`}\r\n          </p>\r\n          <p style={{ textAlign: \"center\", margin: \"5px\", fontWeight: \"bold\" }}>\r\n            {this.state.gameState !== \"\" && this.state.selectedCategory !== \"\"\r\n              ? `Clue : ${this.clue}`\r\n              : ``}\r\n          </p>\r\n          <div className=\"separator\">\r\n            <hr style={{ color: \"transparent\" }} />\r\n          </div>\r\n          <div id=\"dynamic-elements-container\">\r\n            <div id=\"word-container\">\r\n              <Word\r\n                wordAlphabetsList={this.state.wordAlphabets}\r\n                matchedAlphabets={this.state.matchedAlphabets}\r\n              />\r\n            </div>\r\n            <div id=\"game-board-container\">\r\n              <Alphabets\r\n                alphabetList={this.state.alphabetList}\r\n                selectedCategory={this.state.selectedCategory}\r\n                clickedAlphabets={this.state.clickedAlphabets}\r\n                matchedAlphabets={this.state.matchedAlphabets}\r\n                gameStatus={this.state.gameState}\r\n                clickHandle={this.checkAlphabet}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div id=\"stats-container\">\r\n            <p>\r\n              <span role=\"img\" aria-label=\"pen-emoji\">\r\n                ✒️\r\n              </span>{\" \"}\r\n              Score : {this.state.score}\r\n            </p>\r\n            <p>Total Lives : {this.createLifeEmojis()}</p>\r\n          </div>\r\n          <div id=\"word-count-container\">\r\n            <p\r\n              style={\r\n                this.state.selectedCategory !== \"\"\r\n                  ? { opacity: 1 }\r\n                  : { opacity: 0 }\r\n              }\r\n            >\r\n              <span role=\"img\" aria-label=\"telescope-emoji\">\r\n                🔭\r\n              </span>{\" \"}\r\n              Words remaining in this category : {this.state.categoryWordCount}\r\n            </p>\r\n            <p>\r\n              <span role=\"img\" aria-label=\"dartboard-emoji\">\r\n                🎯\r\n              </span>{\" \"}\r\n              Total words remaining : {this.state.totalWordCount}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={\r\n            this.state.gameState === \"end\" &&\r\n            this.state.gameState !== \"\" &&\r\n            this.state.gameState !== \"running\"\r\n              ? { display: \"block\" }\r\n              : { display: \"none\" }\r\n          }\r\n        >\r\n          <GameEnd score={this.finalScore} startGame={this.startGame} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameBoard;","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <>\r\n      <footer className=\"footer\">\r\n        <p className=\"footer-link\">\r\n          Curated with{\" \"}\r\n          <span role=\"img\" aria-label=\"heart-emoji\">\r\n            ❤️\r\n          </span>{\" \"}\r\n          by{\" \"}\r\n          <a\r\n            href=\"https://github.com/rahul-kabra\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer noopener\"\r\n          >\r\n            Rahul\r\n          </a>\r\n        </p>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./Header\";\r\nimport GameBoard from \"./GameBoard\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <GameBoard />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}